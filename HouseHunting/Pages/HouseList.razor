@page "/houselist"
@using  Microsoft.Extensions.Configuration
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Data

@inject INewHouseDAO _idao
@inject IConfiguration _iconfig

<h3>House List</h3>

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="@houseObjectList"
                    Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Update", "Cancel" })"
                    AllowPaging="true"
                    AllowSorting="true">
                <GridPageSettings PageSize="7"></GridPageSettings>
                <GridEvents OnActionBegin="ActionBegin" TValue="HouseObject">   </GridEvents>
                <GridEditSettings AllowAdding="true"
                                  AllowDeleting="true"
                                  AllowEditing="true"
                                  Mode="EditMode.Normal">
                </GridEditSettings>

                <GridTemplates>
                    <DetailTemplate>

                        @{
                            var house = (context as HouseObject);
                                               
                            currentHouse = house;
                            var features = house.Features;


                                                <SfGrid DataSource="@features"
                                                       
                                                        AllowPaging="true">
                                                    @*<GridEditSettings AllowAdding="true"
                                                                      AllowDeleting="true"
                                                                      AllowEditing="true"
                                                                      Mode="EditMode.Normal">
                                                    </GridEditSettings>*@
                                                    <GridEvents OnActionBegin="ActionDetailBegin" 
                                                               OnCellSave="CellSave" 
                                                               TValue="FeatureObject">   </GridEvents>
                                                    <GridPageSettings PageSize="8"></GridPageSettings>

                                                    <GridColumns>

                                                        
                                                        <GridColumn Field=@nameof(FeatureObject.Name)
                                                                    HeaderText="Name"
                                                                    Width="110">
                                                            @*<Template Context="featureContext">
                                                                <SfDropDownList TValue="string" DataSource="FeaturesAll" TItem="FeatureObject">
                                                                    <DropDownListFieldSettings Text="Name" Value="FeatueID"></DropDownListFieldSettings>
                                                                </SfDropDownList>
                                                            </Template>*@
                                                                 
                                                        </GridColumn>

                                                    </GridColumns>
                                                </SfGrid>
                        }
                    </DetailTemplate>
                </GridTemplates>

                <GridColumns>
                    <GridColumn Field=@nameof(HouseObject.HouseID)
                                HeaderText="House ID"
                                IsPrimaryKey="true"
                                IsIdentity="true"
                                ValidationRules="@(new ValidationRules { Required = true, Number = true })"
                                TextAlign="TextAlign.Right"
                                Width="140">

                    </GridColumn>
                    <GridColumn Field=@nameof(HouseObject.Address)
                                HeaderText="Address"
                                ValidationRules="@(new ValidationRules { Required = true })"
                                Width="150">
                        @*<EditTemplate>
                                <SfAutoComplete TItem="OrdersDetails" TValue="string" ID="CustomerID" @bind-Value="@((context as OrdersDetails).CustomerID)" DataSource="@GridData">
                                    <AutoCompleteFieldSettings Value="CustomerID"></AutoCompleteFieldSettings>
                                </SfAutoComplete>
                            </EditTemplate>*@
                    </GridColumn>
                    <GridColumn Field=@nameof(HouseObject.Price)
                                HeaderText="Price"
                                ValidationRules="@(new ValidationRules { Required = true })"
                                EditType="EditType.NumericEdit"
                                Format="C2"
                                TextAlign="TextAlign.Right"
                                Width="140">

                    </GridColumn>
                    @*<GridColumn Field=@nameof(HouseObject.Features)
                                HeaderText="Zillow"
                                Width="160">

                    </GridColumn>*@
                    <GridColumn Field=@nameof(HouseObject.ZillowUrl)
                                HeaderText="Zillow"
                                Width="160">

                    </GridColumn>
                    <GridColumn Field=@nameof(HouseObject.ImageUrl)
                                HeaderText="Image Url"
                                Width="150">

                    </GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>
</div>

@code {
    List<HouseObject> houseObjectList;
    List<FeatureObject> Features;
    List<FeatureObject> FeaturesAll;
    string selectedFeature;
    HouseObject currentHouse;
    FeatureObject currentFeature;
    string connString;


    protected override async Task OnInitializedAsync()
    {
        connString = _iconfig.GetConnectionString("defaultWork");
        try
        {
            FeaturesAll = await _idao.LoadFeatures<FeatureObject, dynamic>(new { }, connString);
            houseObjectList = await _idao.LoadHouseData<HouseObject, dynamic>(new { }, connString);
            foreach (HouseObject house in houseObjectList)
            {

                Features = await _idao.LoadFeaturesByHouse<FeatureObject, dynamic>(new { HouseID = house.HouseID }, connString);
                house.Features.AddRange(Features);
                house.Score = house.GetScore();
            }
        }
        catch (Exception ex)
        {

        }



    }
    public async Task ActionBegin(ActionEventArgs<HouseObject> args)
    {
        HouseObject house = args.Data;
        try
        {
            if (args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
            {
                if (args.Action == "Edit")
                {
                    bool isEdit = await _idao.EditHouse<dynamic>(new {Address = house.Address, Price = house.Price, ZillowUrl = house.ZillowUrl, ImageUrl = house.ImageUrl, HouseID = house.HouseID }, connString);
                }
                else if (args.Action == "Add")
                {
                    int newId = await _idao.AddHouse<HouseObject>(house.Address, house.Price, house.ZillowUrl, house.ImageUrl, connString);
                }
            }
            else if (args.RequestType == Syncfusion.Blazor.Grids.Action.Delete)
            {
                bool isDeleted = await _idao.DeleteHouse<dynamic>(new { HouseID = house.HouseID }, connString);
            }
        }
        catch (Exception ex)
        {

        }



    }
    public async Task ActionDetailBegin(ActionEventArgs<FeatureObject> args)
    {
        FeatureObject features = args.Data;
        string sf = selectedFeature;
        try
        {
            if (args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
            {
                if (args.Action == "Edit")
                {

                }
                else if (args.Action == "Add")
                {

                    var result = await _idao.AddFeature<dynamic>(new {HouseID = currentHouse.HouseID, FeatureID = features.FeatureID }, connString);
                }
            }
            else if (args.RequestType == Syncfusion.Blazor.Grids.Action.Delete)
            {
            }
        }
        catch (Exception ex)
        {

        }



    }
    public async Task CellSave(CellSaveArgs<FeatureObject> Args)
    {

    }
}
