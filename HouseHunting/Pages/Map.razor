@page "/map"

@using Microsoft.Extensions.Configuration
@using HouseHunting.Data
@using Microsoft.Extensions.Logging
@inject ILogger<Map> _logger
@inject INewHouseDAO _idao
@inject IConfiguration _iconfig
@inject IBL _ibl



@{ if (mapMarkers == null)
    {
        <p><em>Loading Locations...</em></p>
    }
    else
    {


        <SfMaps ModelType="@typeof(IDataTemplate)">
            <MapsTitleSettings Text="Saved Houses" />
            <MapsCenterPosition Latitude="35.323490" Longitude="-91.738187" />
            <MapsZoomSettings Enable="true" ShouldZoomInitially="true" MouseWheelZoom="true" EnablePanning="true" PinchZooming="true" />
            <MapsLayers>
                <MapsLayer LayerType="ShapeLayerType.OSM">
                    <MapsMarkerSettings>
                        <MapsMarker Visible="true" DataSource="@mapMarkers" Shape="MarkerType.Star" Height="15" Width="15">
                            <ChildContent>
                                <MapsMarkerTooltipSettings Visible="true" Format="Score: <b>${Score}</b><br>Price: <b>${Price}</b><br>Address: <b>${Address}</b><br>" />
                            </ChildContent>
                            @*<MarkerTemplate>
                                    @{
                                        <div>
                                            <img class="markerTemplate" style="margin-top:-10px;margin-left:-10px;" src="images/house1.png" />
                                        </div>
                                     }
                                </MarkerTemplate>*@

                        </MapsMarker>
                    </MapsMarkerSettings>
                </MapsLayer>
            </MapsLayers>
        </SfMaps>



    }
}
@*<style>
        .markerTemplate {
            height: 30px;
            width: 20px;
            display: block;
            margin: auto;
            font-size: 14px;
        }
    </style>*@

@code {

    string sql = string.Empty;
    string connString = string.Empty;

    List<MarkerModel> mapMarkers;
    List<FeatureObject> Features;


    protected override async Task OnInitializedAsync()
    {
        List<HouseObject> houseObjectList;

        sql = "spGetAllHouseDetails";
        try
        {
            connString = _iconfig.GetConnectionString("defaultWork");
            mapMarkers = await _idao.Load<MarkerModel, dynamic>(new { }, connString, sql);

            foreach (MarkerModel marker in mapMarkers)
            {

                sql = "spGetFeaturesByHouseID";

                Features = await _idao.Load<FeatureObject, dynamic>(new { HouseID = marker.HouseID }, connString, sql);
                sql = "spGetMapMarkerByAddress";
                marker.Features.AddRange(Features);
                marker.Score = marker.GetScore();
                List<MarkerModel> location = new List<MarkerModel>();
                location = await _idao.Load<MarkerModel, dynamic>(new { Address = marker.Address }, connString, sql);
                marker.Latitude = location[0].Latitude;
                marker.Longitude = location[0].Longitude;
                marker.Name = marker.HouseID.ToString();

            }

        }
        catch (Exception ex)
        {
            _logger.LogWarning(ex, "Warning in initialize map page {Time}", DateTime.UtcNow);
            //string stackTrace = _ibl.GenerateStackTrace(ex);
        }
    }



}
